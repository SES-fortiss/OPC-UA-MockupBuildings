-	Das schreiben der Setpoints für den Boiler ist irgendwie zeitverzögert.
	Das heißt der berechnete Setpoint steht wird erst im darauffolgenden Schritt an erster (nullter) Stelle des Sepoint-Arrays.
	Ich denke das hat was zu tun mit der Stelle im Code an der die Daten geschrieben werden.
	Das Schreiben der Setpoints muss natürlich nach der Optimierung erfolgen, das lesen vorher.

-	Der berechnete SOC (calc SOC) stimmt immer mit dem gelesenen SOC überein.
	Entweder du schreibst den falschen Wert oder es liegt wieder an der Stelle im Code an der die Daten geschrieben werden.
	– Oder aber es ist ein Berechnungsproblem.

-	Zu den Gaspreisen: Müssen diese mit Komma oder mit Punkt als Dezimaltrennzeichen angegeben werden?
	Die Gaspreise sind in Euro, richtig?

-	Zum SOC: in welchem Format wird der erwartet? Als Prozentzahl oder zwischen 0 und 1.
	Falls Zweiteres, dann mit Komma oder Punkt als Dezimaltrennzeichen?


- OPC-UA-Verbindung: automatisches neu verbinden nach Kommunikationsfehler
	Letzte Werte sollen beibehalten werden auf beiden Seiten.

- variable Gaspreise: Einlesen über File unvorteilhaft,
	weil Optimierer ca. alle 17 Sekunden neu optimiert und einen Zeitschritt vorangeht.
	Damit entspricht ein Zeitschritt bei den Gaspreisen nicht mehr dem 15-Intervall
	und es wird unmöglich die Gaspreise mit dem Wärmelastprofil abzugleichen.
	Lösungsansatz:
	variable Gaspreise werden ebenfalls vom EMS (via OPC-UA) mit übergeben als Forecast
	und von MEMAP über OPC-UA gelesen	

- generelle Optimierungsroutine:
	Der Optimierer beginnt nach jeder Optimierung direkt mit der nächsten und
	liest die aktuellsten Werte ein. Das ist aber problematisch, wenn er z.B.
	einen Optimierungsschritt in Mitten eines 15-Minuten-Intervalls beginnt
	und dann davon ausgeht, dass der Setpoint, den er berechnet noch für
	15 Minuten gehalten wird, allerdings nur noch 8 Minuten in diesem Intervall
	übrig sind. Das führt zu einem falschen internen SOC und einem falschen Optimierungsverhalten.
	Lösungsansätze:
	1. Von Leistung auf Energie gehen, den jeweiligen Leistungswert rücklesen,
	berechnen wie lange der gehalten wurde, wieviel Energie also schon erzeugt wurde und wieviel
	noch zu erzeugen ist (eleganter, mächtiger Weg, aber umständlich)
	2. Synchronisation der Zeitschritte zwischen Anlagen (EMS) und MEMAP über einen Trigger.
	Z.B. über einen Counter, der Hochzählt und eine Änderung des Wertes triggert den Start des
	nächsten Optimierungsschritts. So eine Änderungsmeldung sollte mit OPC-UA einfach zu realisieren
	sein. In Java muss dann nur eine Whileschleife eingebaut werden, die schaut, ob der Triggerwert sich
	verändert hat im Vergleich zum letzten Durchlauf und falls ja dann durchschält auf die Optimierung.
	Danach gehts wieder in die Schleife.

- variable Preise allgemein:
	Es gibt verschiedene Arten von variablen Preisen:
	- Preis für Netzbezug Strom pro Verbraucher
	- Preis für Netzeinspeisung Strom pro Verbraucher
	- Preis für Netzbezug Wärme pro Verbraucher
	- Preis für Netzeinspeisung Wärme pro Verbraucher
	- Preis für Bezug Gas pro Anlage
	Alle verschiedenen variablen Preise sollten irgendwie kommuniziert werden können.

- OPC-UA-Verbindung: automatisches neu verbinden nach Kommunikationsfehler
	Letzte Werte sollen beibehalten werden auf beiden Seiten.